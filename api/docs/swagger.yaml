definitions:
  models.CreateCustomer:
    properties:
      active:
        type: boolean
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      password:
        type: string
      phone:
        type: string
      sex:
        type: string
    type: object
  models.Customer:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      password:
        type: string
      phone:
        type: string
      sex:
        type: string
      updatedAt:
        type: string
    type: object
  models.CustomerLoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.CustomerLoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.CustomerRegisterConfRequest:
    properties:
      customer:
        $ref: '#/definitions/models.CreateCustomer'
      mail:
        type: string
      otp:
        type: string
    type: object
  models.CustomerRegisterRequest:
    properties:
      mail:
        type: string
    type: object
  models.GetAllCustomersRequest:
    properties:
      limit:
        type: integer
      page:
        type: integer
      search:
        type: string
    type: object
  models.PasswordOfCustomer:
    properties:
      new_password:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.UpdateCustomer:
    properties:
      active:
        type: boolean
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      mail:
        type: string
      password:
        type: string
      phone:
        type: string
      sex:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /customer:
    post:
      consumes:
      - application/json
      description: create a new customer
      parameters:
      - description: customer
        in: body
        name: customer
        schema:
          $ref: '#/definitions/models.CreateCustomer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Creates a new customers
      tags:
      - customer
  /customer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete customer
      parameters:
      - description: customer_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete customer
      tags:
      - customer
    get:
      consumes:
      - application/json
      description: get customer by ID
      parameters:
      - description: customer
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Gets customer
      tags:
      - customer
    patch:
      consumes:
      - application/json
      description: Update customer status
      parameters:
      - description: customer_id
        in: path
        name: id
        required: true
        type: string
      - description: customer
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCustomer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update customer status
      tags:
      - Password and Status
    put:
      consumes:
      - application/json
      description: Update customer
      parameters:
      - description: customer_id
        in: path
        name: id
        required: true
        type: string
      - description: customer
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCustomer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Update customer
      tags:
      - customer
  /customer/login:
    post:
      consumes:
      - application/json
      description: Customer login
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.CustomerLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CustomerLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer login
      tags:
      - auth
  /customer/password:
    patch:
      consumes:
      - application/json
      description: updating password
      parameters:
      - description: customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.PasswordOfCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PasswordOfCustomer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: updating password
      tags:
      - Password and Status
  /customer/register:
    post:
      consumes:
      - application/json
      description: Customer register
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.CustomerRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer register
      tags:
      - auth
  /customer/register-confirm:
    post:
      consumes:
      - application/json
      description: Customer register
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.CustomerRegisterConfRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CustomerLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer register
      tags:
      - auth
  /customers:
    get:
      consumes:
      - application/json
      description: get customer list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GetAllCustomersRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Get customer list
      tags:
      - customer
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
